# ArchFusion OS - Makefile
# Automatisation de la g√©n√©ration d'ISO et des t√¢ches de d√©veloppement
# Auteur: Jimmy Ramsamynaick

# Variables de configuration
DISTRO_NAME := ArchFusion
DISTRO_VERSION := 1.0.0
PROJECT_ROOT := $(shell pwd)
BUILD_DIR := $(PROJECT_ROOT)/build
ISO_DIR := $(PROJECT_ROOT)/iso
SCRIPTS_DIR := $(PROJECT_ROOT)/scripts

# Couleurs pour l'affichage
RED := \033[0;31m
GREEN := \033[0;32m
YELLOW := \033[1;33m
BLUE := \033[0;34m
PURPLE := \033[0;35m
CYAN := \033[0;36m
WHITE := \033[1;37m
NC := \033[0m

# Cibles par d√©faut
.PHONY: all help clean build-iso test-iso install-deps check-deps setup-dev

# Cible par d√©faut
all: help

# Affichage de l'aide
help:
	@echo -e "$(CYAN)"
	@echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
	@echo "‚ïë                                                           ‚ïë"
	@echo "‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó      ‚ïë"
	@echo "‚ïë    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë      ‚ïë"
	@echo "‚ïë    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë      ‚ïë"
	@echo "‚ïë    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë      ‚ïë"
	@echo "‚ïë    ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù      ‚ïë"
	@echo "‚ïë    ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù      ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù       ‚ïë"
	@echo "‚ïë                                                           ‚ïë"
	@echo "‚ïë              üî• Makefile de D√©veloppement                 ‚ïë"
	@echo "‚ïë                                                           ‚ïë"
	@echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
	@echo -e "$(NC)"
	@echo -e "$(WHITE)ArchFusion OS - Version $(DISTRO_VERSION)$(NC)"
	@echo -e "$(PURPLE)Par Jimmy Ramsamynaick$(NC)"
	@echo ""
	@echo -e "$(YELLOW)COMMANDES DISPONIBLES:$(NC)"
	@echo ""
	@echo -e "$(GREEN)üèóÔ∏è  G√âN√âRATION D'ISO:$(NC)"
	@echo -e "  $(WHITE)make build-iso$(NC)      - G√©n√©rer l'ISO ArchFusion"
	@echo -e "  $(WHITE)make build-iso-clean$(NC) - Nettoyer et g√©n√©rer l'ISO"
	@echo -e "  $(WHITE)make test-iso$(NC)       - Tester l'ISO avec QEMU"
	@echo ""
	@echo -e "$(GREEN)üîß D√âVELOPPEMENT:$(NC)"
	@echo -e "  $(WHITE)make setup-dev$(NC)      - Configurer l'environnement de d√©veloppement"
	@echo -e "  $(WHITE)make install-deps$(NC)   - Installer les d√©pendances"
	@echo -e "  $(WHITE)make check-deps$(NC)     - V√©rifier les d√©pendances"
	@echo -e "  $(WHITE)make lint$(NC)           - V√©rifier la syntaxe des scripts"
	@echo ""
	@echo -e "$(GREEN)üì¶ PACKAGING:$(NC)"
	@echo -e "  $(WHITE)make package$(NC)        - Cr√©er un package de distribution"
	@echo -e "  $(WHITE)make release$(NC)        - Pr√©parer une release"
	@echo -e "  $(WHITE)make checksums$(NC)      - G√©n√©rer les checksums"
	@echo ""
	@echo -e "$(GREEN)üßπ MAINTENANCE:$(NC)"
	@echo -e "  $(WHITE)make clean$(NC)          - Nettoyer les fichiers temporaires"
	@echo -e "  $(WHITE)make clean-all$(NC)      - Nettoyage complet"
	@echo -e "  $(WHITE)make backup$(NC)         - Sauvegarder le projet"
	@echo ""
	@echo -e "$(GREEN)‚ÑπÔ∏è  INFORMATIONS:$(NC)"
	@echo -e "  $(WHITE)make info$(NC)           - Informations sur le projet"
	@echo -e "  $(WHITE)make help$(NC)           - Afficher cette aide"
	@echo ""

# V√©rification des d√©pendances
check-deps:
	@echo -e "$(BLUE)üîç V√©rification des d√©pendances...$(NC)"
	@command -v archiso >/dev/null 2>&1 || { echo -e "$(RED)‚ùå archiso manquant$(NC)"; exit 1; }
	@command -v mkarchiso >/dev/null 2>&1 || { echo -e "$(RED)‚ùå mkarchiso manquant$(NC)"; exit 1; }
	@command -v pacman >/dev/null 2>&1 || { echo -e "$(RED)‚ùå pacman manquant$(NC)"; exit 1; }
	@command -v git >/dev/null 2>&1 || { echo -e "$(RED)‚ùå git manquant$(NC)"; exit 1; }
	@echo -e "$(GREEN)‚úì Toutes les d√©pendances sont pr√©sentes$(NC)"

# Installation des d√©pendances
install-deps:
	@echo -e "$(BLUE)üì¶ Installation des d√©pendances...$(NC)"
	@if command -v pacman >/dev/null 2>&1; then \
		sudo pacman -S --needed --noconfirm archiso git base-devel; \
	elif command -v apt >/dev/null 2>&1; then \
		sudo apt update && sudo apt install -y git build-essential; \
		echo -e "$(YELLOW)‚ö†Ô∏è  archiso non disponible sur ce syst√®me$(NC)"; \
	else \
		echo -e "$(RED)‚ùå Gestionnaire de paquets non support√©$(NC)"; \
		exit 1; \
	fi
	@echo -e "$(GREEN)‚úì D√©pendances install√©es$(NC)"

# Configuration de l'environnement de d√©veloppement
setup-dev: install-deps
	@echo -e "$(BLUE)üõ†Ô∏è  Configuration de l'environnement de d√©veloppement...$(NC)"
	@mkdir -p $(BUILD_DIR) $(ISO_DIR)
	@chmod +x $(SCRIPTS_DIR)/*.sh 2>/dev/null || true
	@chmod +x $(SCRIPTS_DIR)/*/*.sh 2>/dev/null || true
	@chmod +x $(SCRIPTS_DIR)/*/*.py 2>/dev/null || true
	@echo -e "$(GREEN)‚úì Environnement de d√©veloppement configur√©$(NC)"

# G√©n√©ration de l'ISO
build-iso: check-deps
	@echo -e "$(BLUE)üèóÔ∏è  G√©n√©ration de l'ISO ArchFusion...$(NC)"
	@if [ "$(shell id -u)" != "0" ]; then \
		echo -e "$(RED)‚ùå Cette commande doit √™tre ex√©cut√©e en tant que root$(NC)"; \
		echo -e "$(YELLOW)Utilisez: sudo make build-iso$(NC)"; \
		exit 1; \
	fi
	@$(SCRIPTS_DIR)/build-iso.sh
	@echo -e "$(GREEN)‚úì ISO g√©n√©r√©e avec succ√®s$(NC)"

# G√©n√©ration de l'ISO avec nettoyage pr√©alable
build-iso-clean: clean build-iso

# Test de l'ISO avec QEMU
test-iso:
	@echo -e "$(BLUE)üß™ Test de l'ISO avec QEMU...$(NC)"
	@if [ ! -f "$(ISO_DIR)/archfusion-$(DISTRO_VERSION)-x86_64.iso" ]; then \
		echo -e "$(RED)‚ùå ISO non trouv√©e. G√©n√©rez d'abord l'ISO avec 'make build-iso'$(NC)"; \
		exit 1; \
	fi
	@if ! command -v qemu-system-x86_64 >/dev/null 2>&1; then \
		echo -e "$(RED)‚ùå QEMU non install√©$(NC)"; \
		echo -e "$(YELLOW)Installation: sudo pacman -S qemu$(NC)"; \
		exit 1; \
	fi
	@echo -e "$(GREEN)üöÄ Lancement de QEMU...$(NC)"
	@qemu-system-x86_64 \
		-cdrom "$(ISO_DIR)/archfusion-$(DISTRO_VERSION)-x86_64.iso" \
		-m 2048 \
		-enable-kvm \
		-boot d \
		-vga std \
		-display gtk &
	@echo -e "$(GREEN)‚úì QEMU lanc√© en arri√®re-plan$(NC)"

# V√©rification de la syntaxe des scripts
lint:
	@echo -e "$(BLUE)üîç V√©rification de la syntaxe des scripts...$(NC)"
	@find $(SCRIPTS_DIR) -name "*.sh" -exec bash -n {} \; && \
		echo -e "$(GREEN)‚úì Syntaxe des scripts bash OK$(NC)" || \
		echo -e "$(RED)‚ùå Erreurs de syntaxe d√©tect√©es$(NC)"
	@find $(SCRIPTS_DIR) -name "*.py" -exec python3 -m py_compile {} \; 2>/dev/null && \
		echo -e "$(GREEN)‚úì Syntaxe des scripts Python OK$(NC)" || \
		echo -e "$(YELLOW)‚ö†Ô∏è  V√©rification Python ignor√©e (py_compile non disponible)$(NC)"

# G√©n√©ration des checksums
checksums:
	@echo -e "$(BLUE)üîê G√©n√©ration des checksums...$(NC)"
	@if [ -f "$(ISO_DIR)/archfusion-$(DISTRO_VERSION)-x86_64.iso" ]; then \
		cd $(ISO_DIR) && \
		sha256sum archfusion-$(DISTRO_VERSION)-x86_64.iso > archfusion-$(DISTRO_VERSION)-x86_64.iso.sha256 && \
		md5sum archfusion-$(DISTRO_VERSION)-x86_64.iso > archfusion-$(DISTRO_VERSION)-x86_64.iso.md5 && \
		echo -e "$(GREEN)‚úì Checksums g√©n√©r√©s$(NC)"; \
	else \
		echo -e "$(RED)‚ùå ISO non trouv√©e$(NC)"; \
		exit 1; \
	fi

# Cr√©ation d'un package de distribution
package: build-iso checksums
	@echo -e "$(BLUE)üì¶ Cr√©ation du package de distribution...$(NC)"
	@mkdir -p $(BUILD_DIR)/package
	@cp -r $(ISO_DIR)/* $(BUILD_DIR)/package/
	@cp README.md $(BUILD_DIR)/package/ 2>/dev/null || true
	@cp LICENSE $(BUILD_DIR)/package/ 2>/dev/null || true
	@cd $(BUILD_DIR) && tar -czf archfusion-$(DISTRO_VERSION)-complete.tar.gz package/
	@echo -e "$(GREEN)‚úì Package cr√©√©: $(BUILD_DIR)/archfusion-$(DISTRO_VERSION)-complete.tar.gz$(NC)"

# Pr√©paration d'une release
release: package
	@echo -e "$(BLUE)üöÄ Pr√©paration de la release $(DISTRO_VERSION)...$(NC)"
	@echo -e "$(YELLOW)Fichiers de release:$(NC)"
	@ls -la $(ISO_DIR)/
	@ls -la $(BUILD_DIR)/archfusion-$(DISTRO_VERSION)-complete.tar.gz
	@echo -e "$(GREEN)‚úì Release $(DISTRO_VERSION) pr√™te$(NC)"

# Sauvegarde du projet
backup:
	@echo -e "$(BLUE)üíæ Sauvegarde du projet...$(NC)"
	@BACKUP_NAME="archfusion-backup-$(shell date +%Y%m%d-%H%M%S).tar.gz"
	@tar --exclude='$(BUILD_DIR)' --exclude='$(ISO_DIR)' --exclude='.git' \
		-czf "$$BACKUP_NAME" .
	@echo -e "$(GREEN)‚úì Sauvegarde cr√©√©e: $$BACKUP_NAME$(NC)"

# Nettoyage des fichiers temporaires
clean:
	@echo -e "$(BLUE)üßπ Nettoyage des fichiers temporaires...$(NC)"
	@rm -rf $(BUILD_DIR)/work $(BUILD_DIR)/out $(BUILD_DIR)/archiso-profile
	@echo -e "$(GREEN)‚úì Fichiers temporaires supprim√©s$(NC)"

# Nettoyage complet
clean-all:
	@echo -e "$(BLUE)üßπ Nettoyage complet...$(NC)"
	@rm -rf $(BUILD_DIR) $(ISO_DIR)
	@echo -e "$(GREEN)‚úì Nettoyage complet effectu√©$(NC)"

# Informations sur le projet
info:
	@echo -e "$(CYAN)‚ÑπÔ∏è  Informations sur le projet$(NC)"
	@echo ""
	@echo -e "$(WHITE)Nom:$(NC) $(DISTRO_NAME)"
	@echo -e "$(WHITE)Version:$(NC) $(DISTRO_VERSION)"
	@echo -e "$(WHITE)R√©pertoire:$(NC) $(PROJECT_ROOT)"
	@echo -e "$(WHITE)Build:$(NC) $(BUILD_DIR)"
	@echo -e "$(WHITE)ISO:$(NC) $(ISO_DIR)"
	@echo ""
	@echo -e "$(WHITE)Fichiers du projet:$(NC)"
	@find . -maxdepth 2 -type f -name "*.sh" -o -name "*.py" -o -name "*.conf" | sort
	@echo ""
	@if [ -f "$(ISO_DIR)/archfusion-$(DISTRO_VERSION)-x86_64.iso" ]; then \
		echo -e "$(GREEN)‚úì ISO disponible:$(NC) $(shell du -h $(ISO_DIR)/archfusion-$(DISTRO_VERSION)-x86_64.iso | cut -f1)"; \
	else \
		echo -e "$(YELLOW)‚ö†Ô∏è  ISO non g√©n√©r√©e$(NC)"; \
	fi

# Cibles qui ne correspondent pas √† des fichiers
.PHONY: help check-deps install-deps setup-dev build-iso build-iso-clean test-iso lint checksums package release backup clean clean-all info